1. 현재 좌우 키보드를 누를면 10px만큼 player가 움직이게 된다.
    하지만 이런 움직임은 자연스럽지 않고 뻣뻣하게 느껴지며, 오른쪽으로 움직이는 도중에 왼쪽 입력이 들어오게 되면 움직임이 멈추게 되는 현상을 확인할 수 있다.

    이것은 스레드가 하나만 존재하기 때문이다.
    스레드는 큐와 같은 방식으로 동작되는데 여러 개의 입력을 받게되면 모든 입력이 돌아가고 난 이후에 이미지로 출력된다.
    또한, 한 번에 한가지의 입력만을 받을 수 있게 되어 right 입력을 계속 받다가 left 입력이 들어오게 되면 동작이 정지된다.

    이러한 문제를 해결하기 위해서는 여러 개의 스레드를 생성하면 된다. (사진 1번) -> 코드는 player 클래스에 작성.

2. 하지만 사진 1번과 같이 이벤트가 들어올 때마다 스레드를 생성하게 된다면 키보드를 한 번 누르면 스레드가 생성되고, 다음 입력이 들어오는 순간 새로운 스레드가 생성되게 된다.
    즉, 효율적이지 않은 코드가 된다.

    이 문제를 해결하기 위해서는 while 구문을 활용하여 한 번 눌린 상태에서는 현재의 스레드를 유지하게 만들면 된다. (사진 2번)

    하지만, 실제 java를 실행해보면 while 구문으로 인해 player가 너무 빨리 움직여서 화면에서 사라지는 것을 볼 수 있다.

    이것도 Thread.sleep(10);을 이용하여 동작 시간을 늦출 수 있다. (사진 3번)
    이때, Thread.sleep(10);는 try-catch 구문으로 묶어줘야 한다.

    이렇게하면 키보드를 한 번 눌렀을 때, player가 멈추지 않고 천천히 한 방향으로 진행하는 것을 볼 수 있다.
    (만약, 같은 방향을 계속 누르고 있다면 점점 가속도를 받게 된다. 또한, 오른쪽으로 진행하는 중에 왼쪽을 누르면 제자리에서 움직이지 못하는 모습을 보인다.)

3. 실제 게임에서는 누르고 있는 순간만 while 구문이 돌아 부드럽게 움직여야 한다.
    이전에 코드를 만들 때, 움직임의 상태를 저장하기 위해 boolean을 사용하여 게임이 시작하는 순간에는 false 값을 받아오게 만들었다.
    이번에는 이 코드를 활용하여 키보드가 눌린 움직인 상태를 변환시켜준다.   (사진 4번)

    아직 while 구문의 큰 변화가 없기 때문에 이전과 같은 현상이 지속되는 상황이다.
    움직임의 상태를 활용하여 움직임을 표현하기 위해서 BubbleFrame 클래스에서 움직임 상태를 받아올 필요가 있다.

    left, right의 상태를 받아오기 위해서는 isLeft, isRight 와 같이 값을 받아와야 하지만, 현재 left,right는 private 값으로 설정되어 있기 때문에 받아올 수 없다.
    이때는 처음 설치한 lombok을 활용하면 된다.(@Getter, @Setter 사용)  (사진 5번)

    다시 BubbleFrame 클래스로 돌아와 if 구문을 추가하여 코드를 작성한다.    (사진 6번)
    이 경우에는 아직 left, right 두 가지를 동시에 받게 될 경우 좌우를 반복하는 문제는 존재하지만, 한 방향을 계속 누르고 있을 경우에 가속되는 문제가 사라진다.

4. 이제까지는 한 번 누른 상태에서는 무조건 true의 형태로 입력을 받아 왔다면, 이번에는 키보드 입력이 끝났을 때, false로 값을 받을 수 있도록 코드를 작성한다.
    키보드를 땐 순간에도 이벤트로 값을 받을 수 있다.(keyReleased 사용)
    즉, keyReleased의 값이 들어오는 순간 left, right의 상태를 false로 변경하면 되는 것이다. (사진 7번)

    이렇게하면 키보드를 누른 순간에만 player가 움직일 수 있게 된다.