1. 점프 기능을 추가하기 전에 player의 속도를 조절하기 위해서 코드를 작성한다. (사진 1번)
    여기서 정의한 스피드는 실제 프로그램 상에서 스피드를 조절하는 것이 아닌 이동하는 px의 크기를 조절하기 위해 작성한 내용이다. (사진 2번)

2. 점프(up)의 경우에는 left + up, right + up과 같이 두 가지의 상태가 존재한다.  (사진 3번)
    이런 상태를 모두 사용하기 위해서는 반드시 스레드가 존재해야만 한다.

    방향키를 누르게 되면 먼저 up의 상태가 true로 변경되어야 한다.
    오른쪽, 왼쪽으로 움직이는 것과 달리 점프는 한 번 뛰고 내려와야 하는 것으로 while이 아닌 for 구문을 사용하여 실행되게 만든다.

    이때, for 구문으로 돌아가는 i는 130까지 움직이게 되는데 한 칸의 높이가 120이지만 살짝 더 올라갔다가 내려오는 것을 표현하기 위해 130으로 설정한다.
    또한, 움직일 때, 스피드를 추가한 것처럼 up 상태에서도 JUMPSPEED를 추가한다.
    여기서 for 구문의 조건에 '130 / JUMPSPEED'를 사용한 이유는 for 구문 안에서 y = y - JUMPSPEED 가 실행되기 때문에 JUMPSPEED의 값에 따라 점프한 높이가 배수로 작용되기 때문이다.

3. 점프를 한 뒤에 떨어지게 되는 down의 경우에는 up의 상태에서 y의 좌표를 +로 변경해주면 된다. (사진 4번)
    (현재 left + up, right + up 기능이 완성된 상태지만, 아직 한 칸 위로 올라가는 것을 구현되지 않았다.)

4. 이전 코드에서 좌우 방향키를 계속 누르고 있으면 가속을 받는 것처럼 점프를 계속 누르고 있으면 한 없이 위로 올라가게 된다.
    다시 BubbleFrame 클래스로 돌아가 up 키가 눌린 순간에만 up이 동작하도록 만들어준다.
    여기서 중요한 것은 up이 실행된 다음에 down이 실행되기 때문에 만약, up 키를 계속 누르고 있는다면 점프되고 있는 상태가 지속되게 된다.
    이를 해결하기 위해선 and(&&)를 사용하여 점프를 한 번만 수행할 수 있도록 코드를 작성한다. (사진 5번)