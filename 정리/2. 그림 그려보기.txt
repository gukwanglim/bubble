1. BubbleFrame 이라는 클래스를 하나 생성하고, 생성한 클래스에 JFrame을 상속하면 setSize를 이용하여 프레임의 크기를 조절할 수 있고, setVisible으로 윈도우 창을 펼칠 수 있다. (사진 1번)

2. 추가로 setLocationRelativeTo의 경우는 JFrame을 가운데 배치하도록 하는 것(이렇게 하지 않으면 java를 실행할 때, 좌측 위에 윈도우 창이 실행된다.)
    setLayout의 경우는 레이아웃 안에 자유롭게 그릴 수 있는 명령어이다.

    이 코드를 실행하게 되면 윈도우 창이 생성되는데 x버튼을 눌러도 프로세스는 계속 실행되게 된다. (사진 2번)

    x버튼으로 JVM까지 함께 종료시키기 위해서는 사진 3번과 같이 setDefaultCloseOperation를 작성해야한다.

3. 레이아웃 안에 그림을 그리기 위해서 사진 4번과 같이 코드를 작성한다.
    먼저, 레이아웃을 사용하기 위해 private JLabel backgroundMap;으로 선언을 하고, initObject() 메서드를 생성하여 인스턴스를 만든다.
        이때, new JLabel("안녕");과 같이 사용하면 "안녕"이라는 단어가 레이아웃에 들어가게 되는데 이 코드만을 작성한다면 윈도우 창이 뜨더라도 보이지 않는다.
        그 이유는 레이아웃에 아직 추가되지 않은 상태이며, 위치를 정하지 않았기 때문이다.

        위치를 정하는 방법은 backgroundMap.setSize(100, 100);로 하는 방법이 있으며,
        레이아웃에 추가하는 방법은 add()를 사용하는 것이다.

    또한, 코드를 직관적으로 볼 수 있게 initSetting() 메서드를 생성하여 이전에 만들었던 설정을 넣고, 불러와 사용할 수 있다.

        실제 윈도우 창에 뜨는 모습(사진 5번)
        추가로 setLocation()을 사용하여 add()로 추가한 내용의 위치를 변경할 수 있다. (사진 6번)

4. 이미지 추가하기.
    레이아웃에 단순한 문자가 아닌 이미지를 넣기 위해서는 사진 7번과 같이 ImageIcon()을 사용하여 넣고자 하는 이미지의 경로를 지정해주면 된다. (사진 8번)


    잠시 전체적인 구조에 대해서 설명하자면
        제일 처음 만들어지는 JFrame은 윈도우 창을 말한다.
        JFrame 안에는 그림을 그릴 수 있는 JPanel이 존재하며, JPanel은 getContentPanel() 메서드를 호출하여 가져올 수 있다.
        이렇게 만들어진 JPanel 안에 add()를 사용하여 JLabel을 넣게 되는 것이다.

        하지만 굳이 세 과정을 거치지 않고, JPanel 자체를 JLabel로 변경하여 사용해도 문제가 없다.
        이렇게 만드는 방법은 setContentPane()을 사용하는 것이다. (사진 9번)
        즉, 윈도우 창에 이미지를 띄우기 위해 위치를 정하거나(backgroundMap.setSize() 사용) 레이아웃을 추가(add() 사용)하는 과정을 건너뛰어도 되는 것이다.

5. 다음으로 플레이어를 추가하기 위해 이전 BubbleFrame_2가 존재하는 패키지 안에 Player 클래스를 생성한다.
    player는 레이아웃 안에서 움직여야 하므로 이전 BubbleFrame_2에서 JFrame을 상속받은 것과 같이 JLabel를 상속받는다.

    background와 달리 player는 움직일 수 있어야 하므로 x, y 값을 받아올 수 있게 하며, player의 오른쪽과 왼쪽 모습(움직일 때 보이는 모습)을 initObject()를 이용하여 받아온다.
    추가로 처음 player가 존재할 위치를 initSetting()으로 설정한 후, setIcon()으로 player의 모습을 받아온다.
    player가 움직일 때 윈도우 창에 나오게 될 위치는 setLocation()을 가지고 표현한다. (사진 10번)

6. 생성한 player를 background에 넣기 위해서는 다시 BubbleFrame_2 클래스로 돌아가 private Player player;로 불러오고, 생성자를 만들어(player = new Player();) 레이아웃에 추가한다.(add()) (사진 11번)

    실제 실행 화면 (사진 12번)